version: "3"

services:
  postgres:
    container_name: postgres
    image: postgis/postgis:16-3.4-alpine
    networks:
      - web-network
    build:
      context: ./postgres
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=tgbot
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_NAME=tgbot
      - POSTGRES_SSLMODE=disable
    volumes:
       - pgdata:/var/lib/postgresql/data/

  backend:
    container_name: backend
    hostname: backend
    networks:
      - web-network
    build:
      context: ./app
    restart: always
    ports:
      - "9000:9000"
    environment:
      - AGGREGATION_PORT=9000
      - AGGREGATION_LOGGER_LEVEL=INFO
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=tgbot
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_NAME=tgbot
      - POSTGRES_SSLMODE=disable
      - TELEGRAM_BOT_TOKEN=my_secret_bot_token
    depends_on:
      - postgres

#  nginx_backend:
#    container_name: nginx_backend
#    image: nginx:1.19.3
#    networks:
#      - web-network
#    ports:
#      - "8082:80"
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#      - /etc/letsencrypt:/etc/letsencrypt
#    restart: always

networks:
  web-network:
    external: true

volumes:
  pgdata:
